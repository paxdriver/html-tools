<!DOCTYPE html>
<head><title>Frivolous Gravitas - Introduction to Javascript: Concurrency / Multi-Threading</title>
<header>
    <author>Kristopher Driver</author>
</header>
<meta name="description" content="Introductory javascript, manipulating elements" />
<meta charset="utf-8">
</head>
<body id='bodyid'>

		<h1>Check out the Frivolous Gravitas Podcast!</h1>
        <p /><a href="https://www.youtube.com/channel/UCb3cCrFqaHFBp2s7jgtJvFg">YouTube Channel:</a> https://www.youtube.com/channel/UCb3cCrFqaHFBp2s7jgtJvFg
        <p /><a href="https://www.facebook.com/Frivolous-Gravitas-Podcast-109356198202987">facebook:</a> https://www.facebook.com/Frivolous-Gravitas-Podcast-109356198202987
        <p /><a href="https://twitter.com/FrivolousGravi1">twitter:</a> https://twitter.com/FrivolousGravi1
        <p /><a href=" https://podcasts.apple.com/us/podcast/id1545984577">iTunes / Apple podcast:</a> https://podcasts.apple.com/us/podcast/id1545984577
        <p /><a href="https://podcasts.google.com/feed/aHR0cHM6Ly9rcmlzZHJpdmVyLmNvbS9mZWVkL3Jzc2ZlZWQueG1s">Google podcast:</a> https://podcasts.google.com/feed/aHR0cHM6Ly9rcmlzZHJpdmVyLmNvbS9mZWVkL3Jzc2ZlZWQueG1s
        <p /><a href="https://github.com/paxdriver/html-tools">Kris's GitHub:</a>  https://github.com/paxdriver/html-tools
        <p /><a href="https://www.krisdriver.com">Kris Driver:</a> https://www.KrisDriver.com
        <hr />
        
    <div id='mydiv'>Press right arrow key</div>
<!-- script type of 'module' is REQUIRED for live server processing. async and web workers require live server -->
<script type='module'>

    const body = window.document.getElementById('bodyid')
    const mydiv = document.getElementById('mydiv')

// PLAYING WITH CSS AND KEYBOARD EVENTS A BIT
    let tmp_posx = 5        // starting position in pixels we're going to use to move the box

    mydiv.style.width = '150px'
    mydiv.style.height = '50px'
    mydiv.style.position = 'absolute'
    mydiv.style.left = tmp_posx + 'px'
    mydiv.style.top = '35px'
    mydiv.style.border = '1px solid red'
    mydiv.style.background = 'rgba(255,255,0, 0.75)'
    mydiv.style.transition = 'all 1.5s ease-in-out'

body.addEventListener('keydown', e => {
    if (e.keyCode == '39') { // right key
        tmp_posx += 150
        mydiv.style.left = tmp_posx + 'px'
    }
    if (e.keyCode == '37'){ 
        // console.log('left key arrow was pressed') 
        tmp_posx -= 150 
        mydiv.style.left = tmp_posx + 'px'      // we're using style.left because that's the css property we're using to move the div box. 'right' would align the box x pixels from the right edge of its parent container
    } // left key
})

body.style.width = '100vw'
body.style.height = '100vh'
body.style.background = '#eee'
// console.log(window.navigator)


// START OF CONCURRENCY 
// console.log(body)
const sideworker = new Worker('worker1.js')
sideworker.addEventListener('message', (evt)=>{
    // console.log(evt)
} )
sideworker.postMessage('This is a message from our main thread...')
sideworker.postMessage({ key1: 'message 1', key2: 'message 2'})

let workerpool = []
let numToRun = 5
for (let i = 0; i < numToRun; i++) {
    workerpool.push(new Worker('./worker1.js'))
    workerpool[i].addEventListener('message', (e)=>{
        // console.log(e.data)
        // console.log('----------------------')
    })
}

workerpool.forEach( (v,i,a) => {
    v.postMessage('Worker number: ' + i)
})
console.log(workerpool)
let outputnum = ''
let start_time = Date.now()
    
function demo(){
    // console.log(start_time)
    let rand = Math.random().toString()
    rand = rand.split('')
    console.log(rand)
    // rand.splice(0,2)    // this would do the same as below but it will run too quick
    rand.forEach( (v,i,a) => {
        if ( i == 0 ) rand.splice(0,1)
        else if (v == '.') {
            // console.log(v + ' is the value that we removed from our array')
            rand.splice(i, 1)
        }
        else outputnum = outputnum + v 
    })

    console.log(outputnum)
}

let time = new Date()
let timestr = time.toDateString()
console.log(time)
console.log(timestr)

parseInt(outputnum)

let z = []
let timestorun = 17009999

for (let n = 0; n < timestorun; n++) {
    let x = Math.random()*100
    let y = Math.random()*100
    let w = Math.random()*100
    z.push(x*y+(w/x)^2)
}

let end_time = Date.now()

let difference_start_end_time = end_time - start_time
let outputObj = {
    rands: z,
    timeTaken: difference_start_end_time,
    randomOutput: outputnum
}

console.log(outputObj)

demo()

console.log(workerpool)

</script>
</body>
</html>